{"version":3,"file":"702.e7a7fa27.iframe.bundle.js","mappings":";AA+BA;;AAGA;AACA;;AAEA;AACA;;;;AAIA;;AAGA;;AAEA;;;;;AAMA","sources":["webpack://kyndryl-ds-poc/./src/components/reusable/button/button.ts"],"sourcesContent":["import { LitElement, html } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport ButtonScss from './button.scss';\n\n/**\n * Primary UI component for user interaction.\n * @fires on-click - Captures the click event and emits the original event details.\n * @csspart button - Styles to override the button\n */\n@customElement('kyn-button')\nexport class Button extends LitElement {\n  static override styles = ButtonScss;\n\n  /** The kind of button to render. */\n  @property({ type: String })\n  kind = 'primary';\n\n  /** The button size. */\n  @property({ type: String })\n  size = 'md';\n\n  /** Converts to an &lt;a&gt; tag to create a link. */\n  @property({ type: String })\n  href = '';\n\n  /** Disables the button. */\n  @property({ type: Boolean })\n  disabled = false;\n\n  override render() {\n    return html`\n      ${this.href != ''\n        ? html`\n            <a\n              href=${this.href}\n              class=\"btn btn--${this.kind} btn--${this.size}\"\n              part=\"button\"\n              ?disabled=${this.disabled}\n              @click=${(e: Event) => this.handleClick(e)}\n            >\n              <slot></slot>\n            </a>\n          `\n        : html`\n            <button\n              class=\"btn btn--${this.kind} btn--${this.size}\"\n              part=\"button\"\n              ?disabled=${this.disabled}\n            >\n              <slot></slot>\n            </button>\n          `}\n    `;\n  }\n\n  private handleClick(e: Event) {\n    const event = new CustomEvent('on-click', {\n      detail: { origEvent: e },\n    });\n    this.dispatchEvent(event);\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kyn-button': Button;\n  }\n}\n"],"names":[],"sourceRoot":""}